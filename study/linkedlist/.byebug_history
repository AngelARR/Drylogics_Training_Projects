exit
ecit
reset
exit
head.next.next
n
nn
n
nnnnnnn
n
nn
n
nn
n
head.next.next
n
head.next.next
n
head.next.next
n
nn
n
head.next.next
n
head.next.next
n
head.next.next
n
head.next.next
n
m
n
head.next.next
n
head.next.next
n
head.next.next
head.next
head
n
nn
n
head.next.next.next
n
head.next.next.next
head
n
head
tail
current.prev
current.next
n
current.prev
current.next
current
n
a.next
a.prev
n
tail.prev
n
a
n
current.next
n
end_node.prev
current.next
end_node
current
exit
current.prev
current
n
current.prev
n
current.prev
current
n
current.prev
current
exit
c
n
current.prev
current.next
prev_b.next
current
prev_b
next_a
prev_a
n
c
b
a
c
n
nn
n
nn
n
exit
current.value
current.next
current.next=element
current.value
element
current.next
exit
current.value
n
element
current.value
current.next
c
n
current.value
n
current.value
element
count
current.value
exit
li.find(4)
li.find(1)
li.find(0)
li.find(2)
c
nc
n
li.index('dog')
n
nn
n
li.index('cat')
li.index('mat')
exit
li.index('rat')
li.index('cat')
li.index('mat')
c
l.head
@head
n
l
var local
var local l
l
exit
c
list
c
list.insert('cat')
list.methods
list
var local
list
c
list
var local
list
c
self
var local
list
var local
exit
list.head.next.next
list.head.next
c
list.head
exit
n
@head
n
@head
n
@head
n
list.head
c
n
exit
@head
@head.next
c
exit
@head
n
@head
n
list.head
c
exit
c
n
list.head
list.to_a
list.head
var local
list
c
@head
n
current == @head
current
n
current.next
current
n
@head
new_element
n
element
exit
list.to_a
exit
list.head
exit
list.head
var local
list
c
@head
@head.next='cat'
@head,next='cat'
@head.value='cat'
@head('cat')
exit
dup.next.to_f
dup.next.methods
dup.next.value
dup.@next
dup(@next)
dup.itself
dup.methods
dup = current.dup
current
dup
dup.next
dup = current.dup
current
abc
abc.next
abc = current.clone
current.clone
exit
@head
@current
@current.next
@current
exit
@current
@current.next
exit
current
current.methods
